/*
Metric Ingest Ruleset API

Metric ingest ruleset API

API version: 3.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metric_ruleset

import (
	"encoding/json"
)

// UpdateMetricRulesetRequest Update metric ingest ruleset request body
type UpdateMetricRulesetRequest struct {
	// Aggregation rules in the ruleset
	Aggregators []RollupAggregator `json:"aggregators,omitempty"`
	// Metric ingest ruleset description
	Description *string      `json:"description,omitempty"`
	Destination *Destination `json:"destination,omitempty"`
	// Ruleset status
	Enabled       *bool          `json:"enabled,omitempty"`
	MetricMatcher *MetricMatcher `json:"metricMatcher,omitempty"`
	// Name of the ruleset
	Name *string `json:"name,omitempty"`
	// Version of the ruleset
	Version *int64 `json:"version,omitempty"`
}

func (o UpdateMetricRulesetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Aggregators != nil {
		toSerialize["aggregators"] = o.Aggregators
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.MetricMatcher != nil {
		toSerialize["metricMatcher"] = o.MetricMatcher
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}
