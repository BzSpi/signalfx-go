/*
Metric Ingest Ruleset API

Metric ingest ruleset API

API version: 3.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metric_ruleset

import (
	"encoding/json"
)

// CreateMetricRulesetRequest Create metric ingest ruleset request body
type CreateMetricRulesetRequest struct {
	// Aggregation rules in the ruleset 
	Aggregators []RollupAggregator `json:"aggregators,omitempty"`
	// Metric ingest ruleset description 
	Description *string `json:"description,omitempty"`
	Destination *Destination `json:"destination,omitempty"`
	// Ruleset status 
	Enabled bool `json:"enabled"`
	// Ruleset ID 
	Id *string `json:"id,omitempty"`
	MetricMatcher MetricMatcher `json:"metricMatcher"`
	// Name of the ruleset 
	Name string `json:"name"`
	// Version of the ruleset 
	Version int64 `json:"version"`
}

func (o CreateMetricRulesetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Aggregators != nil {
		toSerialize["aggregators"] = o.Aggregators
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["metricMatcher"] = o.MetricMatcher
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}